# Use the latest 2.1 version of CircleCI pipeline process engine. 
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
orbs:
  android: circleci/android@1.0.3

commands:
  run_unit_tests:
    description: "Run Unit Tests"
    steps:
      - android/run-tests:
          test-command: ./gradlew lint testDebug --continue

  start_emulator_and_run_instrumentation_tests:
    description: "Run Instrumentation Tests"
    steps:
      - android/start-emulator-and-run-tests:
          test-command: ./gradlew connectedDebugAndroidTest
          system-image: system-images;android-25;google_apis;x86

  create_env_file:
    description: "Create env file"
    steps:
      - run:
          name: Copy Env Vars To Local Properties
          command: source environment.sh && copyEnvVarsToLocalProperties
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build_debug:
    # These next lines define the Android machine image executor: https://circleci.com/docs/2.0/executor-types/
    executor:
      name: android/android-machine

    steps:
      - checkout
      - create_env_file
      - run_unit_tests
      - start_emulator_and_run_instrumentation_tests
      - run:
          name: Assemble debug build
          command: |
            ./gradlew assembleDebug
      - run:
          name: Build debug APK
          command: |
            ./gradlew packageDebugUniversalApk

  build_release:
    executor:
      name: android/android-machine

    steps:
      - checkout
      - create_env_file
      - run:
          name: Assemble release build
          command: |
            ./gradlew assembleRelease
      - run:
          name: Build release APK
          command: |
            ./gradlew packageReleaseUniversalApk

workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  build_and_test:
    jobs:
      - build_debug:
          context: Dicoding Expert Context
          filters:
            branches:
              ignore: master
      - build_release:
          context: Dicoding Expert Context
          filters:
            branches:
              only: master